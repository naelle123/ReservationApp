"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./src/store/auth.ts":
/*!***************************!*\
  !*** ./src/store/auth.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuthStore: function() { return /* binding */ useAuthStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/api */ \"(app-pages-browser)/./src/lib/api.ts\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/constants */ \"(app-pages-browser)/./src/lib/constants.ts\");\n\n\n\n\n// Définir le token dans le mock si disponible\nconst initializeMockAuth = (token)=>{\n    _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.setAuthToken(token);\n};\nconst useAuthStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_3__.persist)((set, get)=>({\n        // État initial\n        user: null,\n        token: null,\n        isLoading: false,\n        error: null,\n        isAuthenticated: false,\n        // Actions\n        login: async (email, password)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                // Validation côté client\n                if (!email.trim() || !password) {\n                    set({\n                        error: \"Email et mot de passe requis\",\n                        isLoading: false\n                    });\n                    return false;\n                }\n                if (!isValidEmail(email)) {\n                    set({\n                        error: \"Format d'email invalide\",\n                        isLoading: false\n                    });\n                    return false;\n                }\n                if (password.length < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.APP_CONSTANTS.VALIDATION.MIN_PASSWORD_LENGTH) {\n                    set({\n                        error: \"Le mot de passe doit contenir au moins 6 caract\\xe8res\",\n                        isLoading: false\n                    });\n                    return false;\n                }\n                // Tentative de connexion\n                const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.login({\n                    email: email.trim(),\n                    mot_de_passe: password\n                });\n                // Sauvegarder le token et l'utilisateur\n                _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.setAuthToken(response.token);\n                set({\n                    user: response.user,\n                    token: response.token,\n                    isAuthenticated: true,\n                    isLoading: false,\n                    error: null\n                });\n                return true;\n            } catch (error) {\n                set({\n                    error: error.message || _lib_constants__WEBPACK_IMPORTED_MODULE_1__.APP_CONSTANTS.ERRORS.UNKNOWN,\n                    isLoading: false\n                });\n                return false;\n            }\n        },\n        logout: async ()=>{\n            set({\n                isLoading: true\n            });\n            try {\n                _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.clearAuth();\n                set({\n                    user: null,\n                    token: null,\n                    isAuthenticated: false,\n                    isLoading: false,\n                    error: null\n                });\n            } catch (error) {\n                // Même en cas d'erreur, nettoyer l'état local\n                _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.clearAuth();\n                set({\n                    user: null,\n                    token: null,\n                    isAuthenticated: false,\n                    isLoading: false,\n                    error: null\n                });\n            }\n        },\n        refreshUser: async ()=>{\n            const { token } = get();\n            if (!token) return;\n            try {\n                const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.getProfile();\n                set({\n                    user: response.user\n                });\n            } catch (error) {\n                // Si erreur, probablement session expirée\n                get().logout();\n            }\n        },\n        changePassword: async (oldPassword, newPassword)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                // Validation côté client\n                if (!oldPassword || !newPassword) {\n                    set({\n                        error: \"Ancien et nouveau mot de passe requis\",\n                        isLoading: false\n                    });\n                    return false;\n                }\n                if (newPassword.length < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.APP_CONSTANTS.VALIDATION.MIN_PASSWORD_LENGTH) {\n                    set({\n                        error: \"Le nouveau mot de passe doit contenir au moins 6 caract\\xe8res\",\n                        isLoading: false\n                    });\n                    return false;\n                }\n                if (oldPassword === newPassword) {\n                    set({\n                        error: \"Le nouveau mot de passe doit \\xeatre diff\\xe9rent de l'ancien\",\n                        isLoading: false\n                    });\n                    return false;\n                }\n                await _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.changePassword({\n                    ancien_mot_de_passe: oldPassword,\n                    nouveau_mot_de_passe: newPassword\n                });\n                set({\n                    isLoading: false\n                });\n                return true;\n            } catch (error) {\n                set({\n                    error: error.message || _lib_constants__WEBPACK_IMPORTED_MODULE_1__.APP_CONSTANTS.ERRORS.UNKNOWN,\n                    isLoading: false\n                });\n                return false;\n            }\n        },\n        clearError: ()=>set({\n                error: null\n            }),\n        setLoading: (loading)=>set({\n                isLoading: loading\n            }),\n        // Getters\n        isAdmin: ()=>{\n            var _get_user;\n            return ((_get_user = get().user) === null || _get_user === void 0 ? void 0 : _get_user.role) === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.APP_CONSTANTS.ROLES.ADMIN;\n        },\n        isUser: ()=>{\n            var _get_user;\n            return ((_get_user = get().user) === null || _get_user === void 0 ? void 0 : _get_user.role) === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.APP_CONSTANTS.ROLES.USER;\n        }\n    }), {\n    name: \"auth-storage\",\n    partialize: (state)=>({\n            user: state.user,\n            token: state.token,\n            isAuthenticated: state.isAuthenticated\n        })\n}));\n// Fonction utilitaire pour valider l'email\nfunction isValidEmail(email) {\n    return /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email);\n}\n// Initialiser l'authentification au chargement\nif (true) {\n    const state = useAuthStore.getState();\n    if (state.token) {\n        _lib_api__WEBPACK_IMPORTED_MODULE_0__.apiService.setAuthToken(state.token);\n        initializeMockAuth(state.token);\n        // Vérifier la validité du token\n        state.refreshUser();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/auth.ts\n"));

/***/ })

});